def binary_search(arr, key):
    low, high, comparisons = 0, len(arr) - 1, 0
    while low <= high:
        mid = (low + high) // 2
        comparisons += 1
        if arr[mid] == key:
            return mid, comparisons
        elif arr[mid] < key:
            low = mid + 1
        else:
            high = mid - 1
    return -1, comparisons
# Test cases
arrays = [
    ([5, 10, 15, 20, 25, 30, 35, 40, 45], 20),
    ([10, 20, 30, 40, 50, 60], 50),
    ([21, 32, 40, 54, 65, 76, 87], 32)
]
for arr, key in arrays:
    index, count = binary_search(arr, key)
    print(f"Input: {len(arr)}, a[] = {arr}, search key = {key} => Output: {index}, Comparisons: {count}")
# output:
Input: 9, a[] = [5, 10, 15, 20, 25, 30, 35, 40, 45], search key = 20 => Output: 3, Comparisons: 3
Input: 6, a[] = [10, 20, 30, 40, 50, 60], search key = 50 => Output: 4, Comparisons: 3
Input: 7, a[] = [21, 32, 40, 54, 65, 76, 87], search key = 32 => Output: 1, Comparisons: 2
